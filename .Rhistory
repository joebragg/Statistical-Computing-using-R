search()
example(cor)
?head
dir()
list.files
files<-dir()
files
files<-dir(include.dirs = FALSE)
files
files<-dir(include.dirs = TRUE)
files
class(files)
list.files(*.*)
list.files("*.*")
?R.home
R.home()
list.files(R.home)
list.files(R.home())
list.files(R.home(),include.dirs = FALSE)
list.files(R.home(),include.dirs = TRUE)
list.files(R.home(),include.dirs = TRUE, no..)
list.files(R.home(),include.dirs = FALSE, no..=FALSE)
list.files(R.home(),include.dirs = FALSE, no..=FALSE, pattern=".")
list.files(R.home(),include.dirs = FALSE, no..=FALSE, pattern="*.*")
list.files(R.home(),include.dirs = FALSE, no..=FALSE, pattern=".exe")
exit
install.packages("data.table")
install.packages("rJava")
install.packages("xlsx")
library("xlsx", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
library("rJava", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
detach("package:xlsx", unload=TRUE)
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
detach("package:rJava", unload=TRUE)
library("rJava", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
library("xlsx", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
install.packages("XML")
install.packages("sqldf")
library("sqldf", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
acs<-read.csv(https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv)
acs<-read.csv("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv")
View(acs)
sqldf("select pwgtp1 from acs where AGEP<50")
sqldf("select distinct AGEP from acs")
unique(acs$AGEP)
install.packages("httr")
library("httr", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
library("XML", lib.loc="C:/Users/ebrajos/Documents/R/win-library/3.0")
url<-"http://biostat.jhsph.edu/~jleek/contact.html"
html<-GET(url)
msg
html<-GET(url)
?httr
?content
?nchar
install.packages("ggplot2")
?data
data()
install.packages("knitr")
install.packages("yaml")
install.packages("htmltools")
install.packages("caTools")
install.packages("rmarkdown")
install.packages("plyr")
install.packages("ggplot")
library("ggplot2", lib.loc="~/R/win-library/3.1")
install.packages("lattice")
install.packages("caret")
library("caret", lib.loc="~/R/win-library/3.1")
install.packages(c("knitr", "manipulate", "Rcpp"))
set.seed(3523)
library(AppliedPredictiveModeling)
install.packages("AppliedPredictiveModeling")
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
library("caret", lib.loc="~/R/win-library/3.1")
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
?plot.enet
?lasso
View(training)
lassoFit<-train(CompressiveStrength~.,data=training,method="lasso")
?plot.enet
plot.enet(lassoFit)
?Lasso
?lasso
plot.enet(lassoFit$finalModel)
plot.enet(lassoFit$finalModel,xvar=c("penalty"),use.color=TRUE)
lassoFit$finalModel
lassoFit$finalModel
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
library("caret", lib.loc="~/R/win-library/3.1")
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
install.packages("e1071")
?e1071
library("e1071", lib.loc="~/R/win-library/3.1")
?e1071
?svm
set.seed(325)
View(training)
fit<-svm(CompressiveStrength~.,data=training)
predtest<-predict(testing,fit)
library("caret", lib.loc="~/R/win-library/3.1")
?predict
predtest<-predict(fit,testing)
predtest
confusionMatrix(predtest,testing$CompressiveStrength)
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
kMeans<-kmeans(subset(training,select=-c(CompressiveStrength)),centers=3)
training$cluster<-as.factor(kMeans$cluster)
View(training)
set.seed(3523)
library(AppliedPredictiveModeling)
data(concrete)
inTrain = createDataPartition(concrete$CompressiveStrength, p = 3/4)[[1]]
training = concrete[ inTrain,]
testing = concrete[-inTrain,]
fit<-svm(CompressiveStrength~.,data=training)
fit
fit$finalModel
predtest<-predict(fit,testing)
accuracy(predtest, testing$CompressiveStrength)
install.packages("forecast")
library("forecast", lib.loc="~/R/win-library/3.1")
accuracy(predtest, testing$CompressiveStrength)
install.packages("shiny")
library("shiny", lib.loc="~/R/win-library/3.1")
install.packages(c("manipulate", "rmarkdown"))
install.packages("devtools")
library("shiny", lib.loc="~/R/win-library/3.1")
runExample("01_hello")
library("devtools", lib.loc="~/R/win-library/3.1")
install_github("slidify", "ramnathv")
library("slidifyLibraries", lib.loc="~/R/win-library/3.1")
library("slidify", lib.loc="~/R/win-library/3.1")
setwd("~/R")
author("Statistical-Computing-using-R")
publish("Statistical-Computing-using-R","joebragg")
slidify("index.Rmd")
setwd("~/R/Statistical-Computing-using-R")
slidify("index.Rmd")
publish("Statistical-Computing-using-R","joebragg")
setwd("~/R/Statistical-Computing-using-R")
